package com.endava.practice.roadmap.config;

import org.springframework.beans.factory.annotation.Value;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.context.annotation.Primary;
import org.springframework.web.servlet.config.annotation.ResourceHandlerRegistry;
import org.springframework.web.servlet.config.annotation.ViewControllerRegistry;
import org.springframework.web.servlet.config.annotation.WebMvcConfigurer;
import springfox.documentation.builders.PathSelectors;
import springfox.documentation.builders.RequestHandlerSelectors;
import springfox.documentation.service.ApiInfo;
import springfox.documentation.service.Contact;
import springfox.documentation.spi.DocumentationType;
import springfox.documentation.spring.web.plugins.Docket;
import springfox.documentation.swagger.web.InMemorySwaggerResourcesProvider;
import springfox.documentation.swagger.web.SwaggerResource;
import springfox.documentation.swagger.web.SwaggerResourcesProvider;
import springfox.documentation.swagger2.annotations.EnableSwagger2;

import java.util.ArrayList;
import java.util.Collections;
import java.util.List;

@Configuration
@EnableSwagger2
public class SwaggerConfig implements WebMvcConfigurer {

    @Value("${swagger.custom-api}")
    private String customApiLocation;

    @Bean
    public Docket automaticApi() {
        return new Docket(DocumentationType.SWAGGER_2)
            .select()
            .apis(RequestHandlerSelectors.any())
            .paths(PathSelectors.any())
            .build()
            .apiInfo(metaData());
    }

    @Override
    public void addResourceHandlers(final ResourceHandlerRegistry registry) {
        registry.addResourceHandler(customApiLocation).addResourceLocations("classpath:/api");
    }

    @Override
    public void addViewControllers(ViewControllerRegistry registry) {
        registry.addRedirectViewController("/api/swagger", "/swagger-ui.html?urls.primaryName=open-api");
    }

    @Primary
    @Bean
    public SwaggerResourcesProvider swaggerResourcesProvider(InMemorySwaggerResourcesProvider defaultResourcesProvider) {
        return () -> {
            List<SwaggerResource> resources = new ArrayList<>();
            resources.add(customApi());
            resources.addAll(defaultResourcesProvider.get());
            return resources;
        };
    }

    private SwaggerResource customApi() {
        SwaggerResource swaggerResource = new SwaggerResource();
        swaggerResource.setName("open-api");
        swaggerResource.setSwaggerVersion("2.0");
        swaggerResource.setLocation(customApiLocation);
        return swaggerResource;
    }

    private ApiInfo metaData() {
        Contact contact = new Contact("Viorel Contu", "", "");

        return new ApiInfo(
            "Roadmap API - Autogenerated",
            "This swagger api is automatically generated",
            "1.0.0",
            "for educational purposes only",
            contact,
            "",
            "",
            Collections.emptyList());
    }
}

